- name: Install Java, Tomcat, and Nexus
  hosts: all
  become: yes
  tasks:
    # Check if Java is installed
    - name: Check if Java is installed
      when: "'tomcat_server' in group_names"
      command: java -version
      register: java_version
      ignore_errors: yes
    
    # Install Java if not installed
    - name: Install Java (only on tomcat_server if not installed)
      when: "'tomcat_server' in group_names and java_version.failed"
      apt:
        name: openjdk-17-jdk
        state: present
    
    # Check if Tomcat is installed
    - name: Check if Tomcat is installed
      when: "'tomcat_server' in group_names"
      stat:
        path: /opt/tomcat
      register: tomcat_stat
    
    # Only install Tomcat if it's not installed
    - name: Install Tomcat (if not installed)
      when: "'tomcat_server' in group_names and not tomcat_stat.stat.exists"
      block:
        - name: Download Tomcat
          get_url:
            url: https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.99/bin/apache-tomcat-9.0.99.tar.gz
            dest: /opt/tomcat.tar.gz
    
        - name: Extract Tomcat
          unarchive:
            src: /opt/tomcat.tar.gz
            dest: /opt
            remote_src: yes
    
        - name: Rename Tomcat directory
          command:
            cmd: mv /opt/apache-tomcat-9.0.99 /opt/tomcat
    
        - name: Set ownership of Tomcat directory
          command:
            cmd: chown -R ubuntu:ubuntu /opt/tomcat
    
        - name: Create systemd service file for Tomcat
          copy:
            dest: /etc/systemd/system/tomcat.service
            content: |
              [Unit]
              Description=Tomcat 9 servlet container
              After=network.target
    
              [Service]
              Type=forking
              ExecStart=/opt/tomcat/bin/startup.sh
              ExecStop=/opt/tomcat/bin/shutdown.sh
              User=root
              Group=root
              UMask=0007
              RestartSec=10
              Restart=always
              LimitNOFILE=4096
    
              [Install]
              WantedBy=multi-user.target
    
        - name: Reload systemd and start Tomcat service
          systemd:
            name: tomcat
            state: started
            enabled: yes
    
    # Restart Tomcat service to apply changes (if Tomcat was already installed)
    - name: Restart Tomcat service to apply changes (if Tomcat was installed)
      when: "'tomcat_server' in group_names and tomcat_stat.stat.exists"
      systemd:
        name: tomcat
        state: restarted
    
    # Continue with the rest of the tasks for deleting and creating custom configuration files...
    
    - name: Delete file /opt/tomcat/conf/server.xml
      when: "'tomcat_server' in group_names"
      file:
        path: /opt/tomcat/conf/server.xml
        state: absent
    
    - name: Create /opt/tomcat/conf/server.xml file
      when: "'tomcat_server' in group_names"
      copy:
        dest: /opt/tomcat/conf/server.xml
        content: |
          <?xml version="1.0" encoding="UTF-8"?>
          <Server port="8005" shutdown="SHUTDOWN">
            <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
            <Listener className="org.apache.catalina.core.AprLifecycleListener" />
            <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
            <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
            <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />
    
            <GlobalNamingResources>
              <Resource name="UserDatabase" auth="Container"
                        type="org.apache.catalina.UserDatabase"
                        description="User database that can be updated and saved"
                        factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
                        pathname="conf/tomcat-users.xml" />
            </GlobalNamingResources>
    
            <Service name="Catalina">
              <Connector port="8888" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" />
              <Engine name="Catalina" defaultHost="localhost">
                <Realm className="org.apache.catalina.realm.LockOutRealm">
                  <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
                         resourceName="UserDatabase"/>
                </Realm>
    
                <Host name="localhost"  appBase="webapps"
                      unpackWARs="true" autoDeploy="true">
                  <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
                         prefix="localhost_access_log" suffix=".txt"
                         pattern="%h %l %u %t &quot;%r&quot; %s %b" />
                </Host>
              </Engine>
            </Service>
          </Server>
    
    # Delete existing context.xml file for manager
    - name: Delete file /opt/tomcat/webapps/manager/META-INF/context.xml
      when: "'tomcat_server' in group_names"
      file:
        path: /opt/tomcat/webapps/manager/META-INF/context.xml
        state: absent
    
    # Create the new context.xml file with custom content
    - name: Create /opt/tomcat/webapps/manager/META-INF/context.xml file
      when: "'tomcat_server' in group_names"
      copy:
        dest: /opt/tomcat/webapps/manager/META-INF/context.xml
        content: |
          <?xml version="1.0" encoding="UTF-8"?>
          <Context antiResourceLocking="false" privileged="true" >
            <CookieProcessor className="org.apache.tomcat.util.http.Rfc6265CookieProcessor"
                             sameSiteCookies="strict" />
            <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow=".*" />
            <Manager sessionAttributeValueClassNameFilter="java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap"/>
          </Context>
    
    # Delete existing tomcat-users.xml file
    - name: Delete file /opt/tomcat/conf/tomcat-users.xml
      when: "'tomcat_server' in group_names"
      file:
        path: /opt/tomcat/conf/tomcat-users.xml
        state: absent
    
    # Create the new tomcat-users.xml file with custom content
    - name: Create /opt/tomcat/conf/tomcat-users.xml file
      when: "'tomcat_server' in group_names"
      copy:
        dest: /opt/tomcat/conf/tomcat-users.xml
        content: |
          <?xml version="1.0" encoding="UTF-8"?>
          <tomcat-users xmlns="http://tomcat.apache.org/xml"
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
                        version="1.0">
            <role rolename="manager-gui"/>
            <role rolename="admin-gui"/>
            <role rolename="manager-script"/>
            <user username="admin" password="admin123" roles="manager-gui,admin-gui,manager-script"/>
          </tomcat-users>

# Ensure Java is installed
- name: Check if Java is installed
  command: java -version
  register: java_version
  ignore_errors: yes

# Install Java if not installed
- name: Install Java (only if not installed)
  when: java_version.failed
  apt:
    name: openjdk-17-jdk
    state: present

# Check if Nexus is installed
- name: Check if Nexus is installed
  stat:
    path: /opt/nexus
  register: nexus_stat

# Only install Nexus if it is not installed
- name: Install Nexus (if not installed)
  when: not nexus_stat.stat.exists
  block:
    # Ensure Nexus installation directory exists
    - name: Ensure Nexus installation directory exists
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus
        mode: '0755'

    # Ensure Sonatype work directory exists
    - name: Ensure Sonatype work directory exists
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus
        mode: '0755'

    # Download Nexus
    - name: Download Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/nexus-unix-x86-64-3.79.0-09.tar.gz
        dest: /tmp/nexus-3.79.0-09.tar.gz

    # Extract Nexus
    - name: Extract Nexus
      unarchive:
        src: /tmp/nexus-3.79.0-09.tar.gz
        dest: /opt
        remote_src: yes
        creates: /opt/nexus

    # Create nexus user and group
    - name: Create nexus user and group
      user:
        name: nexus
        shell: /bin/bash
        password: "{{ 'nexus' | password_hash('sha512') }}"
        state: present

    # Set ownership of Nexus directory
    - name: Set ownership of Nexus directory
      command:
        cmd: chown -R nexus:nexus /opt/nexus

    # Create systemd service file for Nexus
    - name: Create systemd service file for Nexus
      copy:
        dest: /etc/systemd/system/nexus.service
        content: |
          [Unit]
          Description=Nexus Repository Manager
          After=network.target

          [Service]
          Type=forking
          ExecStart=/opt/nexus/bin/nexus start
          ExecStop=/opt/nexus/bin/nexus stop
          User=nexus
          Group=nexus
          UMask=0007
          RestartSec=10
          Restart=always
          LimitNOFILE=4096

          [Install]
          WantedBy=multi-user.target
      mode: '0644'  # Ensure correct file permissions

    # Reload systemd to pick up Nexus service file
    - name: Reload systemd to pick up Nexus service file
      systemd:
        daemon_reload: yes

    # Start and enable Nexus service
    - name: Start and enable Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes

    # Clean up downloaded tarball
    - name: Clean up the downloaded tarball
      file:
        path: /tmp/nexus-3.79.0-09.tar.gz
        state: absent

# If Nexus is already installed, just ensure it's running
- name: Ensure Nexus service is running (if Nexus was already installed)
  when: nexus_stat.stat.exists
  block:
    # Reload systemd to pick up Nexus service file
    - name: Reload systemd to pick up Nexus service file
      systemd:
        daemon_reload: yes

    # Ensure Nexus service is started and enabled
    - name: Ensure Nexus service is started and enabled
      systemd:
        name: nexus
        state: started
        enabled: yes
